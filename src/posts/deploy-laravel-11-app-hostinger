---
title: How to deploy a Laravel 11 with Inertia and React app in Hostinger
tags: [laravel, inertia, react, hostinger, deployment]
date: "07-13-2024"
summary: This is a walktrough on a custom app architecture with SSR and CSR in Laravel 11 with Inertia and React, and a tutorial how to deploy it in Hostinger.
---

# Why Laravel 11 and React?

This is a interesting question, and the answer is not to simple, when you create a commond client-server 
architecture you have to create a lot of code to make the client and server communicate, oviously in
the long term this is a good idea for maintainability and specially when you develop the backend and the
frontend with the same technologie, this case was different, the team I work with had a lot of experience 
with Js in the front and PHP in the backend (laravel), propably following what I'm saying until now, we 
have to create a project for React client and one for the Laravel server, if we would have done it we had 
to worry about CORS, client routing (probably the hardest one), server routing, API versioning, handler and
showing error, etc and 2 different projects to maintain, probaly if we were more than a small team, that 
should be the best option.

![Laravel React](https://res.cloudinary.com/practicaldev/image/fetch/s--BYPcBrp0--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://thepracticaldev.s3.amazonaws.com/i/l2vicl71wmxtcgob0gu2.png)

But we aren't so we decided to use Inertia, a library that allows you to create a moder SPA (Single Page 
Aplications) and use SSR (Server Side Rendering) reducing the complexity of creating modern SPAs, and all 
the routes are managed by the server.

while you are reading this probably you're asking the questiong Why not Next.js? and the answare is easy
to get the job finaly faster whe had to prioritase a known technologie and this was Larave. Also we as a 
team and as a developers we ❤️ testing new technologies and Laravel 11 was a new version and we said "why 
not?". What would be the worst that could happen? 🤷‍♂️.

# The architecture

The project itself is private but it doens't mean that I can't show you the architecture, if you want to 
know more about the libraries go to the [Laravel inertia integration](https://laravel.com/docs/11.x/frontend#inertia),
[Inertia](https://inertiajs.com/) and [React](https://react.dev/) official sites.

the architecture is the following one:

```bash

├── app
│   ├── Http
│   │   ├── Controllers # important
│   │   ├── Middleware
│   │   └── Requests
│   ├── Models  # important
│   ├── Providers
│   └── Services
├── bootstrap
├── config
├── database
├── lang
├── public
├── resources # important
│   ├── js # important
│   │   ├── Assets
│   │   ├── Components
│   │   ├── Layouts
│   │   ├── Pages
│   │   ├── types
│   │   ├── app.tsx
│   │   └── bootstrap.ts
│   ├── views
│   └── css
├── routes
├── storage
├── test
├── .editorconfig
├── .env.example
├── artisan
├── .gitignore
├── composer.json
├── package.json
├── tailwind.config.js
├── phpunit.xml
├── tsconfig.json
└── vite.config.js

```

I'm not going to explain all the folders, but esencially with this architecture we can create a Controller 
that renders the view stored on *resources/js/**/ and handling the form submit, probably in other post, I must tell you 
about the architecture but for now I'm going to show you how to deploy it in Hostinger.

# Deploying the app

Obviously the first step to do that is to have a Hostinger account, if you don't have one you can create
one [here](https://www.hostinger.com/), after that you have to create a new project, you can easily do that the first time you log in.

To deploy the app you have to follow the following steps, have in mind that the following steps are for windows:
1. On your panel go to administrate files 
![files](https://www.hostinger.in/tutorials/wp-content/uploads/sites/2/2024/07/hPanel-dashboard-layout-1024x432.png)
    - There you will see a view like this ![file-administration](https://www.hostinger.com/tutorials/wp-content/uploads/sites/2/2023/05/The-New-File-and-New-Folder-buttons-location-in-Hostinger-File-Manager-1.png)
    there you are going to upload the files of your proyect inside the `/public_html` folder, we will get back in a moment.
    








 
import { renderToStaticMarkup } from "react-dom/server"
